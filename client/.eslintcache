[{"/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/index.js":"1","/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/App.js":"2","/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/components/Spinner.js":"3","/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/components/Navbar.js":"4","/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/pages/savedproducts.js":"5","/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/pages/Index.js":"6","/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/components/Product.js":"7","/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/utils/API.js":"8","/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/components/LogoutButton.js":"9","/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/components/LoginButton.js":"10","/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/components/ProductCard.js":"11"},{"size":370,"mtime":1610413143542,"results":"12","hashOfConfig":"13"},{"size":2697,"mtime":1610499705203,"results":"14","hashOfConfig":"13"},{"size":328,"mtime":1610125451524,"results":"15","hashOfConfig":"13"},{"size":838,"mtime":1610501412505,"results":"16","hashOfConfig":"13"},{"size":488,"mtime":1610660012633,"results":"17","hashOfConfig":"13"},{"size":4184,"mtime":1610660012631,"results":"18","hashOfConfig":"13"},{"size":2589,"mtime":1610499337807,"results":"19","hashOfConfig":"13"},{"size":1023,"mtime":1610418164755,"results":"20","hashOfConfig":"13"},{"size":363,"mtime":1610501568176,"results":"21","hashOfConfig":"13"},{"size":339,"mtime":1610501615228,"results":"22","hashOfConfig":"13"},{"size":3799,"mtime":1610660012629,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1uvmzyo",{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},"/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/index.js",[],["53","54"],"/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/App.js",["55","56","57","58"],"import React, { useState, useEffect, useReducer } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\nimport Index from './pages/Index';\nimport Products from './pages/savedproducts';\nimport Navbar from './components/Navbar';\nimport ProductCard from './components/Product';\nimport SavedProducts from './pages/savedproducts';\nimport Spinner from './components/Spinner';\nimport API from './utils/API';\n\nfunction App() {\n  const [theme, setTheme] = useState('light');\n  const [isLoading, setIsLoading] = useState({});\n  const [savedProducts, setSavedProducts] = useState({\n    productData: null,\n  });\n  const [product, setProduct] = useState({\n    itemTitle: null,\n    itemUrl: null,\n    itemImage: null,\n    itemPrice: null,\n    itemStatus: null,\n    itemPriceAlert: null,\n  });\n\n  function updateProductState(item) {\n    setProduct({\n      itemTitle: item.data.title,\n      itemUrl: item.data.url,\n      itemImage: item.data.image,\n      itemPrice: item.data.price,\n      itemStatus: item.data.availability,\n    });\n  }\n\n  function clearProductState() {\n    setProduct({\n      itemTitle: null,\n      itemUrl: null,\n      itemImage: null,\n      itemPrice: null,\n      itemStatus: null,\n      itemPriceAlert: null,\n    });\n  }\n\n  function readProductState() {\n    return product;\n  }\n\n  function updateIsLoadingState(bool) {\n    setIsLoading(bool);\n  }\n\n  function getUsersSavedItems() {\n    API.getUsersSavedItems('smrodriguez88@gmail.com').then((res) => {\n      console.log(`User saved item data retrieved ${JSON.stringify(res.data)}`);\n      setSavedProducts({ productData: null });\n      setSavedProducts({ productData: res.data });\n    });\n  }\n\n  useEffect(() => {\n    getUsersSavedItems();\n  }, []);\n\n  return (\n    <Router>\n      <Navbar />\n      <div>\n        <Route\n          exact\n          path=\"/\"\n          render={() => (\n            <Index\n              updateProductState={updateProductState}\n              clearProductState={clearProductState}\n              updateIsLoadingState={updateIsLoadingState}\n            />\n          )}\n        />\n        <Route exact path=\"/products\" component={Products} />\n        {isLoading == true && <Spinner />}\n        {product.itemTitle != null && (\n          <ProductCard\n            item={product}\n            updateProductState={updateProductState}\n            clearProductState={clearProductState}\n            readProductState={readProductState}\n            getUsersSavedItems={getUsersSavedItems}\n          />\n        )}\n        {savedProducts.productData != null && (\n          <SavedProducts savedProducts={savedProducts} />\n        )}\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/components/Spinner.js",[],"/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/components/Navbar.js",["59"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../App.css';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { Button } from 'react-bootstrap';\nimport LogoutButton from './LogoutButton';\nimport LoginButton from './LoginButton';\n\n// Depending on the current path, this component sets the \"active\" class on the appropriate navigation link item\nfunction Navbar() {\n  const { isAuthenticated } = useAuth0();\n\n  return (\n    <nav className=\"navbar navbar-expand-lg  \">\n      <div>\n        <Link className=\"navbar-brand\" to=\"/\">\n          Stockify\n        </Link>\n      </div>\n\n      <div>\n        {/* Login/Logout Button */}\n        <div className=\"nav-item navbar-right \">\n          {isAuthenticated ? <LogoutButton /> : <LoginButton />}\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/pages/savedproducts.js",["60","61","62","63"],"/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/pages/Index.js",["64"],"import React, { useState } from 'react';\nimport '../App.css';\nimport { Card, Row, Col, Button, Form, CardDeck } from 'react-bootstrap';\nimport Banner from '../assets/images/Stuck at Home - Searching.png';\nimport API from '../utils/API';\nimport '../App.css';\n\nfunction Index(props) {\n  // stores whatever was typed in the input element\n  const [userInput, setUserInput] = useState({ url: '' });\n  // on change of the element, this will grab the value inputted and set state with that value\n  function handleInputChange(event) {\n    setUserInput({ url: event.target.value });\n  }\n  // with the state already set with the url, this will make the call passing the url to the backend\n  function handleSearch() {\n    console.log('Search button clicked');\n    props.updateIsLoadingState(true);\n    API.getItem(userInput.url)\n      .then((res) => {\n        // console.log(res.data);\n        // Updates the product state on the App.js component\n        props.updateIsLoadingState(false);\n        props.updateProductState(res);\n      })\n      .catch((err) => console.log(err));\n  }\n  return (\n    <div className=\"App\">\n      <div className=\"top-banner\">\n        We monitor product avaiblity for you, search and save your amazon\n        product and we will email you when it is back in stock!\n      </div>\n      <div className=\"jumbotron jumbotron-fluid mt-20\">\n        <div className=\"container\">\n          <Row>\n            <Col className=\"search-col md-8\">\n              <h1 className=\"search-title\">Search for your Product</h1>\n              <p className=\"search-text\">\n                and we will notify you when it's back in stock.\n              </p>\n              <Form inline>\n                <Form.Control\n                  size=\"md\"\n                  type=\"search\"\n                  className=\"product-search\n                  mr-2\"\n                  placeholder=\"Amazon Product URL\"\n                  className=\"\n                  product-search\n                  mr-2\"\n                  onChange={handleInputChange}\n                />\n                <Button onClick={handleSearch} variant=\"outline-primary\">\n                  Search\n                </Button>\n              </Form>\n            </Col>\n            <Col className=\"md-4 d-none d-sm-block d-sm-none d-md-block d-md-none d-lg-block\">\n              <img className=\"banner-photo\" src={Banner} alt=\"bannerphoto\" />\n            </Col>\n          </Row>\n        </div>\n      </div>\n      <div className=\"container banner\">\n        <div className=\"row\">\n          <CardDeck>\n            <Card className=\"info-card\">\n              <Card.Body>\n                <i className=\"fas fa-search fa-2x m-2 mb-3\" />\n                <Card.Title className=\"banner-title\">\n                  {' '}\n                  <strong>Step 1</strong>\n                </Card.Title>\n                <Card.Text>\n                  Find the desired product on Amazon Copy the Amazon product\n                  item URL into the Stockify search bar\n                </Card.Text>\n              </Card.Body>\n            </Card>\n            <Card className=\"info-card\">\n              <Card.Body>\n                <i className=\"fas fa-cart-arrow-down fa-2x m-2 mb-3\" />\n                <Card.Title className=\"banner-title\">\n                  {' '}\n                  <strong>Step 2</strong>\n                </Card.Title>\n                <Card.Text>\n                  Save the product to your Saved Products page Select your\n                  product notification preferences.\n                </Card.Text>\n              </Card.Body>\n            </Card>\n            <Card className=\"info-card\">\n              <Card.Body>\n                <i className=\"far fa-smile fa-2x m-2 mb-3\"></i>\n                <Card.Title className=\"banner-title\">\n                  {' '}\n                  <strong>Step 3</strong>\n                </Card.Title>\n                <Card.Text>\n                  We will watch the product for you and email you when the\n                  desired price or availability change.\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </CardDeck>\n        </div>\n      </div>\n      <hr />\n    </div>\n  );\n}\n\nexport default Index;\n","/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/components/Product.js",["65","66","67"],"import React, { useState } from 'react';\nimport '../App.css';\nimport API from '../utils/API';\nimport { Card, Container, Button, ListGroup } from 'react-bootstrap';\n\nfunction Product(props) {\n  // Creating a state that holds which question we are asking\n  const [counter, setCounter] = useState(0);\n\n  // counter===0 question/button set event listener functions\n  // Question 1 \"Yes\" onclick function\n  const question1Yes = (event) => {\n    event.preventDefault()\n    let item = props.readProductState()\n    console.log()\n    API.saveItem(item).then(res =>{\n      console.log(res)\n    }).catch(err => console.log(err))\n    props.clearProductState();\n    props.getUsersSavedItems();\n    // changing counter to 1, to present the statement\n    setCounter(1);\n  };\n\n  // Question 1 \"No\" onclick function\n  const question1No = (event) => {\n    event.preventDefault();\n    console.log('No has been clicked');\n    props.clearProductState();\n    // setting the counter to 404 to prompt user to check their url entry and try again, or to return to the product page\n    setCounter(404);\n  };\n  // end counter===0\n\n  return (\n    <div>\n      <Container className=\"product-container md-4\">\n        {/* this is the new card */}\n        <Card className=\"md-4 product-card\">\n          <Card.Title className=\"mb-3\">\n            <h2>Item Found</h2>\n          </Card.Title>\n          <img\n            src={props.item.itemImage}\n            alt=\"\"\n            className=\"new-product-photo\"\n          />\n          <Card.Body>\n            <Card.Title>\n              <a href={props.item.itemUrl} target=\"_blank\">\n                {props.item.itemTitle}\n              </a>\n            </Card.Title>\n            <Card.Text>\n              <strong style={{ color: 'red' }}>{props.item.itemStatus}</strong>\n            </Card.Text>\n          </Card.Body>\n          <Card.Body>\n            <Card.Subtitle className=\"text-muted product-subtext text-center\">\n              Would you like to save this product to your \"Saved Products\" list\n              for notification capabilities?\n            </Card.Subtitle>\n            <Button\n              onClick={question1Yes}\n              variant=\"success\"\n              className=\"product-btn\"\n            >\n              Yes\n            </Button>\n            <Button\n              onClick={question1No}\n              variant=\"outline-primary\"\n              className=\"product-btn\"\n            >\n              No\n            </Button>\n          </Card.Body>\n        </Card>\n        {/* this ends the new card */}\n      </Container>\n    </div>\n  );\n}\n\nexport default Product;\n","/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/utils/API.js",["68"],"import axios from \"axios\";\n\n// Export an object containing methods we'll use for accessing the Dog.Ceo API\n\nexport default {\n  getItem: function(data) {\n    console.log(`[utils/API] [getItem] - URL being retrieved ${JSON.stringify(data)}`)\n    return axios.post(\"/api/getItem\", {\n        params: {\n            \"url\": data\n        }\n    });\n  },\n  saveItem: function(data) {\n    console.log(`[utils/API] [saveItem] - Item being saved ${JSON.stringify(data)}`)\n    return axios.post(\"api/saveItem\", {\n        params: {\n            title : data.itemTitle,\n            url : data.itemUrl,\n            image : data.itemImage,\n            price : data.itemPrice,\n            availability : data.itemStatus,\n            itemPriceAlert: \"\",\n        }\n    });\n  },\n  getUsersSavedItems: function(user) {\n    console.log(`[utils/API] [getUsersSavedItems] - Retrieving saved items for user ${JSON.stringify(user)}`)\n    return axios.post(\"api/getUsersSavedItems\", {\n        params: {\n            user : user,\n        }\n    });\n  },\n};","/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/components/LogoutButton.js",[],"/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/components/LoginButton.js",[],"/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/components/ProductCard.js",["69"],"import React, { useState } from 'react';\nimport '../App.css';\nimport { Card, Container, Row, Col, Button } from 'react-bootstrap';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction SavedProduct(props) {\n  // Price Change toggle button variable for setting state\n  const [priceChecked, setPriceChecked] = useState({ checked: false });\n  // Avialability Change toggle button variable for setting state\n  const [availabilityChecked, setAvailabilityChecked] = useState({\n    available: false,\n  });\n\n  return (\n    <Card>\n      <Card.Header>\n        <strong style={{ color: 'green' }}>\n          {props.savedProduct.itemStatus}\n        </strong>\n      </Card.Header>\n      <Card.Body>\n        <Container>\n          <Row>\n            <Col className=\"prod-picture mb-5 md-4\">\n              <img\n                src={props.savedProduct.itemImage}\n                alt=\"\"\n                className=\"mx-auto my-auto\"\n                width=\"80%\"\n                height=\"auto%\"\n                max-width=\"50px\"\n              />\n            </Col>\n            <Col className=\"description md-4\">\n              <Card.Title className=\"product-name\">\n                {props.savedProduct.itemTitle}\n              </Card.Title>\n            </Col>\n            <Col className=\"notification-preference\" md={4}>\n              You can choose to be notified on price changes, availability\n              changes, or both.\n              <br></br>\n              Click the toggles for any which you want to receive notifications\n              for <strong>below!</strong>\n            </Col>\n            <Button variant=\"danger\" className=\"btn-delete\">\n              X\n            </Button>\n          </Row>\n\n          <Row>\n            <Col className=\"mb-5 center description md-4\">\n              <Button variant=\"primary\" className=\"view-btn\">\n                View Product\n              </Button>\n              <Button variant=\"light\" className=\"view-btn mr-5\">\n                Update Product\n              </Button>\n            </Col>\n            <Col className=\"description md-4\">\n              <Card.Subtitle className=\"mb-2 text-muted center\">\n                Price: <strong>{props.savedProduct.itemPrice}</strong>\n              </Card.Subtitle>\n              <Card.Text className=\"center\">\n                <strong style={{ color: 'red' }}>\n                  {props.savedProduct.itemStatus}\n                </strong>\n              </Card.Text>\n            </Col>\n            <Col className=\"notification-preference md-4\">\n              <ButtonGroup toggle className=\"m-2\">\n                <ToggleButton\n                  className=\"p-check btn- btn-secondary active\"\n                  type=\"checkbox\"\n                  checked={priceChecked.checked}\n                  value=\"1\"\n                  onChange={(e) =>\n                    setPriceChecked({ checked: e.currentTarget.checked })\n                  }\n                >\n                  Price Change\n                </ToggleButton>\n              </ButtonGroup>\n              <ButtonGroup toggle className=\"m-2\">\n                <ToggleButton\n                  className=\"a-check btn- btn-secondary active\"\n                  type=\"checkbox\"\n                  checked={availabilityChecked.available}\n                  value=\"1\"\n                  onChange={(e) =>\n                    setAvailabilityChecked({\n                      available: e.currentTarget.checked,\n                    })\n                  }\n                >\n                  Availability Change\n                </ToggleButton>\n              </ButtonGroup>\n            </Col>\n          </Row>\n        </Container>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default SavedProduct;\n",{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":1,"column":38,"nodeType":"76","messageId":"77","endLine":1,"endColumn":48},{"ruleId":"74","severity":1,"message":"78","line":13,"column":10,"nodeType":"76","messageId":"77","endLine":13,"endColumn":15},{"ruleId":"74","severity":1,"message":"79","line":13,"column":17,"nodeType":"76","messageId":"77","endLine":13,"endColumn":25},{"ruleId":"80","severity":1,"message":"81","line":84,"column":20,"nodeType":"82","messageId":"83","endLine":84,"endColumn":22},{"ruleId":"74","severity":1,"message":"84","line":5,"column":10,"nodeType":"76","messageId":"77","endLine":5,"endColumn":16},{"ruleId":"74","severity":1,"message":"85","line":3,"column":10,"nodeType":"76","messageId":"77","endLine":3,"endColumn":14},{"ruleId":"74","severity":1,"message":"86","line":3,"column":27,"nodeType":"76","messageId":"77","endLine":3,"endColumn":30},{"ruleId":"74","severity":1,"message":"87","line":3,"column":32,"nodeType":"76","messageId":"77","endLine":3,"endColumn":35},{"ruleId":"74","severity":1,"message":"84","line":3,"column":37,"nodeType":"76","messageId":"77","endLine":3,"endColumn":43},{"ruleId":"88","severity":1,"message":"89","line":49,"column":19,"nodeType":"90","endLine":51,"endColumn":24},{"ruleId":"74","severity":1,"message":"91","line":4,"column":35,"nodeType":"76","messageId":"77","endLine":4,"endColumn":44},{"ruleId":"74","severity":1,"message":"92","line":8,"column":10,"nodeType":"76","messageId":"77","endLine":8,"endColumn":17},{"ruleId":"93","severity":1,"message":"94","line":50,"column":44,"nodeType":"90","endLine":50,"endColumn":59},{"ruleId":"95","severity":1,"message":"96","line":5,"column":1,"nodeType":"97","endLine":35,"endColumn":3},{"ruleId":"74","severity":1,"message":"98","line":3,"column":45,"nodeType":"76","messageId":"77","endLine":3,"endColumn":49},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'useReducer' is defined but never used.","Identifier","unusedVar","'theme' is assigned a value but never used.","'setTheme' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Button' is defined but never used.","'Card' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'ListGroup' is defined but never used.","'counter' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Form' is defined but never used.","no-global-assign","no-unsafe-negation"]