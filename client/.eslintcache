[{"/Users/stevenrodriguez/Library/Mobile Documents/com~apple~CloudDocs/Projects/HOMEWORK/Stockify/client/src/index.js":"1","/Users/stevenrodriguez/Library/Mobile Documents/com~apple~CloudDocs/Projects/HOMEWORK/Stockify/client/src/App.js":"2","/Users/stevenrodriguez/Library/Mobile Documents/com~apple~CloudDocs/Projects/HOMEWORK/Stockify/client/src/components/Spinner.js":"3","/Users/stevenrodriguez/Library/Mobile Documents/com~apple~CloudDocs/Projects/HOMEWORK/Stockify/client/src/utils/API.js":"4","/Users/stevenrodriguez/Library/Mobile Documents/com~apple~CloudDocs/Projects/HOMEWORK/Stockify/client/src/components/Navbar.js":"5","/Users/stevenrodriguez/Library/Mobile Documents/com~apple~CloudDocs/Projects/HOMEWORK/Stockify/client/src/pages/index.js":"6","/Users/stevenrodriguez/Library/Mobile Documents/com~apple~CloudDocs/Projects/HOMEWORK/Stockify/client/src/pages/savedproducts.js":"7","/Users/stevenrodriguez/Library/Mobile Documents/com~apple~CloudDocs/Projects/HOMEWORK/Stockify/client/src/components/LoginButton.js":"8","/Users/stevenrodriguez/Library/Mobile Documents/com~apple~CloudDocs/Projects/HOMEWORK/Stockify/client/src/components/LogoutButton.js":"9","/Users/stevenrodriguez/Library/Mobile Documents/com~apple~CloudDocs/Projects/HOMEWORK/Stockify/client/src/components/NewProductCard.js":"10","/Users/stevenrodriguez/Library/Mobile Documents/com~apple~CloudDocs/Projects/HOMEWORK/Stockify/client/src/components/SavedProductCard.js":"11"},{"size":370,"mtime":1610414968569,"results":"12","hashOfConfig":"13"},{"size":3136,"mtime":1610595182904,"results":"14","hashOfConfig":"13"},{"size":328,"mtime":1610589864478,"results":"15","hashOfConfig":"13"},{"size":1589,"mtime":1610592356917,"results":"16","hashOfConfig":"13"},{"size":815,"mtime":1610589169289,"results":"17","hashOfConfig":"13"},{"size":4039,"mtime":1610585194845,"results":"18","hashOfConfig":"13"},{"size":526,"mtime":1610513128008,"results":"19","hashOfConfig":"13"},{"size":311,"mtime":1610595026894,"results":"20","hashOfConfig":"13"},{"size":402,"mtime":1610589339594,"results":"21","hashOfConfig":"13"},{"size":2543,"mtime":1610592330426,"results":"22","hashOfConfig":"13"},{"size":3909,"mtime":1610589664807,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1q8l4d4",{"filePath":"27","messages":"28","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"26"},"/Users/stevenrodriguez/Library/Mobile Documents/com~apple~CloudDocs/Projects/HOMEWORK/Stockify/client/src/index.js",[],["52","53"],"/Users/stevenrodriguez/Library/Mobile Documents/com~apple~CloudDocs/Projects/HOMEWORK/Stockify/client/src/App.js",["54","55","56","57","58"],"/Users/stevenrodriguez/Library/Mobile Documents/com~apple~CloudDocs/Projects/HOMEWORK/Stockify/client/src/components/Spinner.js",[],"/Users/stevenrodriguez/Library/Mobile Documents/com~apple~CloudDocs/Projects/HOMEWORK/Stockify/client/src/utils/API.js",["59"],"import axios from \"axios\";\n\n// Export an object containing methods we'll use for accessing the Dog.Ceo API\n\nexport default {\n  getItem: async function(data) {\n    console.log(`[utils/API] [getItem] - URL being retrieved ${JSON.stringify(data)}`)\n    return await axios.post(\"/api/getItem\", {\n        params: {\n            \"url\": data\n        }\n    });\n  },\n  saveUserItem: async function(user, item) {\n    console.log(`[utils/API] [saveUserItem] - Saving Item ${JSON.stringify(item)} for ${user.email}`)\n    return await axios.post(\"api/saveUserItem\", {\n        params: {\n          user : user,\n          item : item,\n        }\n    });\n  },\n  getUsersSavedItems: async function(user) {\n    console.log(`[utils/API] [getUsersSavedItems] - Retrieving saved items for user ${JSON.stringify(user.email)}`)\n    return await axios.post(\"api/getUsersSavedItems\", {\n        params: {\n            user : user,\n        }\n    });\n  },\n  deleteUsersSavedItem: async function(user, item) {\n    console.log(`[utils/API] [deleteUsersSavedItem] - Removing saved item ${item.name}for user ${JSON.stringify(user.email)}`)\n    return await axios.post(\"api/deleteUsersSavedItem\", {\n        params: {\n            user : user,\n            item : item,\n        }\n    });\n  },\n  updateUsersSavedItems: async function(user, item) {\n    console.log(`[utils/API] [updateUsersSavedItems] - Update saved item ${item.name} for user ${JSON.stringify(user.email)}`)\n    return await axios.post(\"api/updateUsersSavedItems\", {\n        params: {\n            user : user,\n            item : item,\n        }\n    });\n  },\n  \n};","/Users/stevenrodriguez/Library/Mobile Documents/com~apple~CloudDocs/Projects/HOMEWORK/Stockify/client/src/components/Navbar.js",[],"/Users/stevenrodriguez/Library/Mobile Documents/com~apple~CloudDocs/Projects/HOMEWORK/Stockify/client/src/pages/index.js",[],"/Users/stevenrodriguez/Library/Mobile Documents/com~apple~CloudDocs/Projects/HOMEWORK/Stockify/client/src/pages/savedproducts.js",["60","61","62","63"],"import React from 'react';\nimport SavedProductCard from '../components/SavedProductCard';\nimport { Card, Container, Row, Col, Button } from 'react-bootstrap';\n\nfunction savedproducts(props) {\n  return (\n    <Container className=\"product-container\">\n      <h1 className=\"product-saved-heading\">All Saved Products</h1>\n\n      {props.savedProducts.productData.map((savedProduct) =>\n          <SavedProductCard key={savedProduct._id} savedProduct={savedProduct}/>\n        )}\n    </Container>\n  );\n}\n\nexport default savedproducts;\n","/Users/stevenrodriguez/Library/Mobile Documents/com~apple~CloudDocs/Projects/HOMEWORK/Stockify/client/src/components/LoginButton.js",[],"/Users/stevenrodriguez/Library/Mobile Documents/com~apple~CloudDocs/Projects/HOMEWORK/Stockify/client/src/components/LogoutButton.js",[],["64","65"],"/Users/stevenrodriguez/Library/Mobile Documents/com~apple~CloudDocs/Projects/HOMEWORK/Stockify/client/src/components/NewProductCard.js",["66","67","68"],"import React, { useState } from 'react';\nimport '../App.css';\nimport API from '../utils/API';\nimport { Card, Container, Button, ListGroup } from 'react-bootstrap';\nimport { useAuth0 } from '@auth0/auth0-react';\n\nfunction NewProductCard(props) {\n  // Creating a state that holds which question we are asking\n  const { user } = useAuth0();\n\n  const question1Yes = async (event) => {\n    event.preventDefault()\n    console.log(`Yes Clicked`)\n    let item = props.readProductState()\n    console.log(`Saving Item ${JSON.stringify(item)} for ${user.email}`)\n    API.saveUserItem(user, item).then(res =>{\n      console.log(res)\n      props.clearProductState();\n      // Needed to delay fetching the users saved items as the fetch would happen before the item could save to the DB\n      setTimeout(() => {props.getUsersSavedItems(); }, 2000)\n    }).catch(err => console.log(err))\n  };\n\n  const question1No = (event) => {\n    event.preventDefault();\n    console.log('No has been clicked');\n    props.clearProductState();\n    props.getUsersSavedItems();\n  };\n\n  return (\n    <div>\n      <Container className=\"product-container md-4\">\n        {/* this is the new card */}\n        <Card className=\"md-4 product-card\">\n          <Card.Title className=\"mb-3\">\n            <h2>Item Found</h2>\n          </Card.Title>\n          <img\n            src={props.item.itemImage}\n            alt=\"\"\n            className=\"new-product-photo\"\n          />\n          <Card.Body>\n            <Card.Title>\n              <a href={props.item.itemUrl} target=\"_blank\">\n                {props.item.itemTitle}\n              </a>\n            </Card.Title>\n            <Card.Text>\n              <strong style={{ color: 'red' }}>{props.item.itemStatus}</strong>\n            </Card.Text>\n          </Card.Body>\n          <Card.Body>\n            <Card.Subtitle className=\"text-muted product-subtext text-center\">\n              Would you like to save this product to your \"Saved Products\" list\n              for notification capabilities?\n            </Card.Subtitle>\n            <Button\n              onClick={question1Yes}\n              variant=\"success\"\n              className=\"product-btn\"\n            >\n              Yes\n            </Button>\n            <Button\n              onClick={question1No}\n              variant=\"outline-primary\"\n              className=\"product-btn\"\n            >\n              No\n            </Button>\n          </Card.Body>\n        </Card>\n        {/* this ends the new card */}\n      </Container>\n    </div>\n  );\n}\n\nexport default NewProductCard;\n","/Users/stevenrodriguez/Library/Mobile Documents/com~apple~CloudDocs/Projects/HOMEWORK/Stockify/client/src/components/SavedProductCard.js",["69"],"import React, { useState } from 'react';\nimport '../App.css';\nimport { Card, Container, Row, Col, Button, Form } from 'react-bootstrap';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction SavedProductCard(props) {\n    // Price Change toggle button variable for setting state\n    const [priceChecked, setPriceChecked] = useState({checked: false});\n    // Avialability Change toggle button variable for setting state\n    const [availabilityChecked, setAvailabilityChecked] = useState({available: false});\n\n  return (\n    <Card className=\"mb-5\">\n      <Card.Header>\n        <strong style={{ color: 'green' }}>\n          {props.savedProduct.itemStatus}\n        </strong>\n      </Card.Header>\n      <Card.Body>\n        <Container>\n          <Row>\n            <Col className=\"prod-picture mb-5 md-4\">\n              <img\n                src={props.savedProduct.itemImage}\n                alt=\"\"\n                className=\"mx-auto my-auto\"\n                width=\"80%\"\n                height=\"auto%\"\n                max-width=\"50px\"\n              />\n            </Col>\n            <Col className=\"description md-4\">\n              <Card.Title className=\"product-name\">\n                {props.savedProduct.itemTitle}\n              </Card.Title>\n            </Col>\n            <Col className=\"notification-preference\" md={4}>\n              You can choose to be notified on price changes, availability\n              changes, or both.\n              <br></br>\n              Click the toggles for any which you want to receive notifications\n              for <strong>below!</strong>\n            </Col>\n            <Button variant=\"danger\" className=\"btn-delete\">\n              <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n            </Button>\n          </Row>\n\n          <Row>\n            <Col className=\"mb-5 center description md-4\">\n              <Button variant=\"primary\" className=\"view-btn\">\n                View Product\n              </Button>\n              <Button variant=\"light\" className=\"view-btn ml-3\">\n                Update Product\n              </Button>\n            </Col>\n            <Col className=\"description md-4\">\n              <Card.Subtitle className=\"mb-2 text-muted center\">\n                Price: <strong>{props.savedProduct.itemPrice}</strong>\n              </Card.Subtitle>\n              <Card.Text className=\"center\">\n                <strong style={{ color: 'red' }}>\n                  {props.savedProduct.itemStatus}\n                </strong>\n              </Card.Text>\n            </Col>\n            <Col className=\"notification-preference md-4\">\n              <ButtonGroup toggle className=\"m-2\">\n                <ToggleButton\n                  className=\"p-check btn btn-secondary active\"\n                  type=\"checkbox\"\n                  // onClick={}\n                  checked={priceChecked.checked}\n                  value=\"1\"\n                  onChange={(e) =>\n                    setPriceChecked({ checked: e.currentTarget.checked })\n                  }\n                >\n                  Price Change\n                </ToggleButton>\n              </ButtonGroup>\n              <ButtonGroup toggle className=\"m-2\">\n                <ToggleButton\n                  className=\"a-check btn- btn-secondary active\"\n                  type=\"checkbox\"\n                  checked={availabilityChecked.available}\n                  value=\"1\"\n                  onChange={(e) =>\n                    setAvailabilityChecked({\n                      available: e.currentTarget.checked,\n                    })\n                  }\n                >\n                  Availability Change\n                </ToggleButton>\n              </ButtonGroup>\n            </Col>\n          </Row>\n        </Container>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default SavedProductCard;\n",{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":1,"column":38,"nodeType":"76","messageId":"77","endLine":1,"endColumn":48},{"ruleId":"74","severity":1,"message":"78","line":13,"column":10,"nodeType":"76","messageId":"77","endLine":13,"endColumn":15},{"ruleId":"74","severity":1,"message":"79","line":13,"column":17,"nodeType":"76","messageId":"77","endLine":13,"endColumn":25},{"ruleId":"80","severity":1,"message":"81","line":81,"column":6,"nodeType":"82","endLine":81,"endColumn":8,"suggestions":"83"},{"ruleId":"84","severity":1,"message":"85","line":99,"column":22,"nodeType":"86","messageId":"87","endLine":99,"endColumn":24},{"ruleId":"88","severity":1,"message":"89","line":5,"column":1,"nodeType":"90","endLine":50,"endColumn":3},{"ruleId":"74","severity":1,"message":"91","line":3,"column":10,"nodeType":"76","messageId":"77","endLine":3,"endColumn":14},{"ruleId":"74","severity":1,"message":"92","line":3,"column":27,"nodeType":"76","messageId":"77","endLine":3,"endColumn":30},{"ruleId":"74","severity":1,"message":"93","line":3,"column":32,"nodeType":"76","messageId":"77","endLine":3,"endColumn":35},{"ruleId":"74","severity":1,"message":"94","line":3,"column":37,"nodeType":"76","messageId":"77","endLine":3,"endColumn":43},{"ruleId":"70","replacedBy":"95"},{"ruleId":"72","replacedBy":"96"},{"ruleId":"74","severity":1,"message":"97","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":25},{"ruleId":"74","severity":1,"message":"98","line":4,"column":35,"nodeType":"76","messageId":"77","endLine":4,"endColumn":44},{"ruleId":"99","severity":1,"message":"100","line":46,"column":44,"nodeType":"101","endLine":46,"endColumn":59},{"ruleId":"74","severity":1,"message":"102","line":3,"column":45,"nodeType":"76","messageId":"77","endLine":3,"endColumn":49},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'useReducer' is defined but never used.","Identifier","unusedVar","'theme' is assigned a value but never used.","'setTheme' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUsersSavedItems'. Either include it or remove the dependency array.","ArrayExpression",["105"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Card' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Button' is defined but never used.",["103"],["104"],"'useState' is defined but never used.","'ListGroup' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'Form' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},"Update the dependencies array to be: [getUsersSavedItems]",{"range":"108","text":"109"},[2130,2132],"[getUsersSavedItems]"]