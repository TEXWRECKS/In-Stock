[{"/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/index.js":"1","/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/reportWebVitals.js":"2","/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/App.js":"3","/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/pages/products.js":"4","/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/components/navbar.js":"5","/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/components/savedProducts.js":"6","/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/pages/index.js":"7","/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/components/product.js":"8","/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/components/icons.js":"9"},{"size":503,"mtime":1609810419984,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1609810419985,"results":"12","hashOfConfig":"11"},{"size":1314,"mtime":1610033050663,"results":"13","hashOfConfig":"11"},{"size":183,"mtime":1609810419985,"results":"14","hashOfConfig":"11"},{"size":1159,"mtime":1610029466578,"results":"15","hashOfConfig":"11"},{"size":1568,"mtime":1609810419983,"results":"16","hashOfConfig":"11"},{"size":3875,"mtime":1610033386420,"results":"17","hashOfConfig":"11"},{"size":4846,"mtime":1610029466579,"results":"18","hashOfConfig":"11"},{"size":204,"mtime":1610033357549,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"1uvmzyo",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"23"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"23"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/index.js",["42"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n",["43","44"],"/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/reportWebVitals.js",[],"/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/App.js",["45","46","47"],"/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/pages/products.js",[],"/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/components/navbar.js",[],"/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/components/savedProducts.js",["48"],"import React from 'react';\nimport '../App.css';\nimport { Card, Container, Row, Col, Button } from 'react-bootstrap';\nimport Lego from '../assets/images/lego.jpg';\n\nfunction savedProduct() {\n  return (\n    <div>\n      <div className=\"container\">\n        <h1 className=\"product-saved-heading\">All Saved Products</h1>\n\n        <Card>\n          <Card.Header>\n            <strong style={{ color: 'green' }}>In Stock</strong>\n          </Card.Header>\n          <Card.Body>\n            <Row>\n              <Col className=\"md\">\n                <img src={Lego} alt=\"\" className=\"photo-small\" />\n              </Col>\n              <Col className=\"md\">\n                <Card.Title className=\"product-name\">\n                  LEGO Technic Bugatti Chiron 42083 Race Car Building Kit and\n                  Engineering Toy, Adult Collectible Sports Car with Scale Model\n                  Engine (3599 Pieces)\n                </Card.Title>\n                <Card.Subtitle className=\"mb-2 text-muted product-price\">\n                  Price: <strong>$349.95</strong>\n                </Card.Subtitle>\n                <Card.Text className=\"product-status\">\n                  <strong style={{ color: 'red' }}>Out of Stock</strong>\n                </Card.Text>\n              </Col>\n              <Col className=\"mb-2 btn-col md\">\n                <Button variant=\"primary\" className=\"view-btn\">\n                  View Product\n                </Button>\n              </Col>\n            </Row>\n          </Card.Body>\n        </Card>\n      </div>\n    </div>\n  );\n}\n\nexport default savedProduct;\n","/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/pages/index.js",[],"/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/components/product.js",["49"],"import React, { useState } from 'react';\nimport '../App.css';\nimport { Card, Container, Row, Col, Button } from 'react-bootstrap';\n// import Lego from '../assets/images/lego.jpg';\n\nfunction Product(props) {\n  // Creating a state that holds which question we are asking\n  const [counter, setCounter] = useState(0);\n\n  // counter===0 question/button set event listener functions\n  // Question 1 \"Yes\" onclick function\n  const question1Yes = (event) => {\n    event.preventDefault();\n    // *** NEED to write code here to save the product to the saved products list/page\n\n    // changing counter to 1, to present the statement\n    setCounter(1);\n  };\n\n  // Question 1 \"No\" onclick function\n  const question1No = (event) => {\n    event.preventDefault();\n    // *** NEED to write code that will save the url that was searched, in case the user presses \"Back\" in the 404 option provided to them...\n    // ... if they click this \"No\" button\n    console.log('No has been clicked');\n    props.updateProductState({\n      data: {\n        title: '',\n        url: '',\n        image: '',\n        price: 0,\n        availability: '',\n      },\n    });\n    // setting the counter to 404 to prompt user to check their url entry and try again, or to return to the product page\n    setCounter(404);\n  };\n  // end counter===0\n\n  return (\n    <div\n    //   style={{\n    //     position: 'absolute',\n    //     left: '50%',\n    //     top: '50%',\n    //     transform: 'translate(-50%, -50%)',\n    //   }}\n    >\n      <Container className=\"product-container md\">\n        <Card className=\"product-card\">\n          <Card.Body>\n            <Card.Title className=\"product-found\">Product Found</Card.Title>\n\n            {/* Counter===0 Question (Question 1) */}\n            {counter === 0 ? (\n              <Card.Subtitle className=\"mb-2 text-muted product-subtext\">\n                {/* Would you like to save this product to your \"Saved Products\"\n                page for notification capabilities? */}\n              </Card.Subtitle>\n            ) : // Ends counter===0 question (Question 1)\n\n            // Counter===1 statement (question 1 yes)\n            counter === 1 ? (\n              <Card.Subtitle className=\"mb-2 text-muted product-subtext\">\n                This item has been saved to your Saved Products! Check your\n                Saved Products page to confirm product notification preferences.\n              </Card.Subtitle>\n            ) : // Ends counter===1 statement (question 1 yes)\n\n            null}\n\n            <Container className=\"product-output\">\n              <Row>\n                <Col md>\n                  <img\n                    src={props.item.itemImage}\n                    alt=\"\"\n                    className=\"product-photo\"\n                  />\n                </Col>\n                <Col className=\"product-details md\">\n                  {/* this needs to be props and also have a limit on character length */}\n                  <Card.Title className=\"product-name\">\n                    {/* displays the title and allows user to click on a link to the url, opening in a new window*/}\n                    <a href={props.item.itemUrl} target=\"_blank\">\n                      {props.item.itemTitle}\n                    </a>\n                  </Card.Title>\n                  <Card.Subtitle className=\"mb-2 text-muted product-price\">\n                    Price: <strong>{props.item.itemPrice}</strong>\n                  </Card.Subtitle>\n                  <Card.Text className=\"product-status\">\n                    <strong style={{ color: 'red' }}>\n                      {props.item.itemStatus}\n                    </strong>\n                  </Card.Text>\n\n                  {/* Counter===0 button set (for Question 1)*/}\n                  {counter === 0 ? (\n                    <>\n                      <Card.Subtitle className=\"mb-2 text-muted product-subtext\">\n                        Would you like to save this product to your \"Saved\n                        Products\" page for notification capabilities?\n                      </Card.Subtitle>\n                      <Button\n                        onClick={question1Yes}\n                        variant=\"success\"\n                        className=\"product-btn\"\n                      >\n                        Yes\n                      </Button>\n                      <Button\n                        onClick={question1No}\n                        variant=\"outline-primary\"\n                        className=\"product-btn\"\n                      >\n                        No\n                      </Button>\n                    </>\n                  ) : // Ends counter===0 button set (for Question 1)\n\n                  null}\n                </Col>\n              </Row>\n            </Container>\n          </Card.Body>\n        </Card>\n      </Container>\n    </div>\n  );\n}\n\nexport default Product;\n","/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/components/icons.js",["50"],{"ruleId":"51","severity":1,"message":"52","line":5,"column":8,"nodeType":"53","messageId":"54","endLine":5,"endColumn":23},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"51","severity":1,"message":"59","line":12,"column":10,"nodeType":"53","messageId":"54","endLine":12,"endColumn":15},{"ruleId":"51","severity":1,"message":"60","line":12,"column":17,"nodeType":"53","messageId":"54","endLine":12,"endColumn":25},{"ruleId":"61","severity":1,"message":"62","line":42,"column":28,"nodeType":"63","messageId":"64","endLine":42,"endColumn":30},{"ruleId":"51","severity":1,"message":"65","line":3,"column":16,"nodeType":"53","messageId":"54","endLine":3,"endColumn":25},{"ruleId":"66","severity":1,"message":"67","line":85,"column":50,"nodeType":"68","endLine":85,"endColumn":65},{"ruleId":"51","severity":1,"message":"69","line":1,"column":8,"nodeType":"53","messageId":"54","endLine":1,"endColumn":13},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["70"],"no-negated-in-lhs",["71"],"'theme' is assigned a value but never used.","'setTheme' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Container' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'React' is defined but never used.","no-global-assign","no-unsafe-negation"]