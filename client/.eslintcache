[{"/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/index.js":"1","/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/reportWebVitals.js":"2","/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/App.js":"3","/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/pages/products.js":"4","/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/components/navbar.js":"5","/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/components/savedProducts.js":"6","/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/pages/index.js":"7","/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/components/product.js":"8","/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/components/icons.js":"9"},{"size":503,"mtime":1609810419984,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1609810419985,"results":"12","hashOfConfig":"11"},{"size":1314,"mtime":1610033050663,"results":"13","hashOfConfig":"11"},{"size":183,"mtime":1609810419985,"results":"14","hashOfConfig":"11"},{"size":1159,"mtime":1610033612651,"results":"15","hashOfConfig":"11"},{"size":1588,"mtime":1610036862248,"results":"16","hashOfConfig":"11"},{"size":3605,"mtime":1610036500856,"results":"17","hashOfConfig":"11"},{"size":4846,"mtime":1610029466579,"results":"18","hashOfConfig":"11"},{"size":204,"mtime":1610033357549,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"1uvmzyo",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"23"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"23"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"23"},"/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/index.js",["44"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n",["45","46"],"/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/reportWebVitals.js",[],"/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/App.js",["47","48","49"],"import React, { useState } from 'react';\nimport './components/icons';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\nimport Index from './pages/index';\nimport Products from './pages/products';\nimport Navbar from './components/navbar';\nimport ProductCard from './components/product';\nimport SavedProducts from './components/savedProducts';\n\nfunction App() {\n  const [theme, setTheme] = useState('light');\n  const [product, setProduct] = useState({\n    itemTitle: '',\n    itemUrl: '',\n    itemImage: '',\n    itemPrice: 0,\n    itemStatus: '',\n    itemPriceAlert: 0,\n  });\n\n  function updateProductState(item) {\n    setProduct({\n      itemTitle: item.data.title,\n      itemUrl: item.data.url,\n      itemImage: item.data.image,\n      itemPrice: item.data.price,\n      itemStatus: item.data.availability,\n    });\n  }\n\n  return (\n    <Router>\n      <Navbar />\n      <div>\n        <Route\n          exact\n          path=\"/\"\n          render={() => <Index updateProductState={updateProductState} />}\n        />\n        <Route exact path=\"/products\" component={Products} />\n        {product.itemTitle != '' && (\n          <ProductCard item={product} updateProductState={updateProductState} />\n        )}\n        <SavedProducts />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/pages/products.js",[],"/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/components/navbar.js",[],"/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/components/savedProducts.js",[],"/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/pages/index.js",["50"],"import React, { useState } from 'react';\nimport '../App.css';\nimport { Card, Row, Col, Button, Form, CardDeck } from 'react-bootstrap';\nimport Banner from '../assets/images/Stuck at Home - Searching.png';\nimport Axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nfunction Index(props) {\n  // stores whatever was typed in the input element\n  const [userInput, setUserInput] = useState({ url: '' });\n  // on change of the element, this will grab the value inputted and set state with that value\n  function handleInputChange(event) {\n    setUserInput({ url: event.target.value });\n  }\n  // with the state already set with the url, this will make the call passing the url to the backend\n  function handleSearch() {\n    console.log('Search button clicked');\n    console.log(userInput);\n    Axios.post('/api/getItem', userInput)\n      .then((res) => {\n        // console.log(res.data);\n        // Updates the product state on the App.js component\n        props.updateProductState(res);\n      })\n      .catch((err) => console.log(err));\n  }\n  return (\n    <div className=\"App\">\n      <div className=\"top-banner\">\n        We monitor product avaiblity for you, search and save your amazon\n        product and we will email you when it is back in stock!\n      </div>\n      <div className=\"jumbotron jumbotron-fluid mt-20\">\n        <div className=\"container\">\n          <Row>\n            <Col className=\"search-col md-8\">\n              <h1 className=\"search-title\">Search for your Product</h1>\n              <p className=\"search-text\">\n                and we will notify you when it's back in stock.\n              </p>\n              <Form inline>\n                <Form.Control\n                  type=\"search\"\n                  placeholder=\"URL or Amazon Product Id\"\n                  className=\" product-search mr-2\"\n                  onChange={handleInputChange}\n                />\n                <Button onClick={handleSearch} variant=\"outline-primary\">\n                  Search\n                </Button>\n              </Form>\n            </Col>\n            <Col className=\"md-4\">\n              <img className=\"banner-photo\" src={Banner} alt=\"bannerphoto\" />\n            </Col>\n          </Row>\n        </div>\n      </div>\n      <div className=\"container banner\">\n        <div className=\"row\">\n          <CardDeck>\n            <Card className=\"info-card\">\n              <Card.Body>\n                {/* Icon to be added */}\n                <Card.Title>Step 1</Card.Title>\n                <Card.Text>\n                  Find the desired product on Amazon Copy the Amazon product\n                  item URL into the Stockify search bar\n                </Card.Text>\n              </Card.Body>\n            </Card>\n            <Card className=\"info-card\">\n              <Card.Body>\n                {/* Icon to be added */}\n                <Card.Title>Step 2</Card.Title>\n                <Card.Text>\n                  Save the product to your Saved Products page Select your\n                  product notification preferences.\n                </Card.Text>\n              </Card.Body>\n            </Card>\n            <Card className=\"info-card\">\n              <Card.Body>\n                {/* Icon to be added */}\n                <Card.Title>Step 3</Card.Title>\n                <Card.Text>\n                  We will watch the product for you and email you when the\n                  desired price or availability change.\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </CardDeck>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Index;\n","/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/components/product.js",["51"],"import React, { useState } from 'react';\nimport '../App.css';\nimport { Card, Container, Row, Col, Button } from 'react-bootstrap';\n// import Lego from '../assets/images/lego.jpg';\n\nfunction Product(props) {\n  // Creating a state that holds which question we are asking\n  const [counter, setCounter] = useState(0);\n\n  // counter===0 question/button set event listener functions\n  // Question 1 \"Yes\" onclick function\n  const question1Yes = (event) => {\n    event.preventDefault();\n    // *** NEED to write code here to save the product to the saved products list/page\n\n    // changing counter to 1, to present the statement\n    setCounter(1);\n  };\n\n  // Question 1 \"No\" onclick function\n  const question1No = (event) => {\n    event.preventDefault();\n    // *** NEED to write code that will save the url that was searched, in case the user presses \"Back\" in the 404 option provided to them...\n    // ... if they click this \"No\" button\n    console.log('No has been clicked');\n    props.updateProductState({\n      data: {\n        title: '',\n        url: '',\n        image: '',\n        price: 0,\n        availability: '',\n      },\n    });\n    // setting the counter to 404 to prompt user to check their url entry and try again, or to return to the product page\n    setCounter(404);\n  };\n  // end counter===0\n\n  return (\n    <div\n    //   style={{\n    //     position: 'absolute',\n    //     left: '50%',\n    //     top: '50%',\n    //     transform: 'translate(-50%, -50%)',\n    //   }}\n    >\n      <Container className=\"product-container md\">\n        <Card className=\"product-card\">\n          <Card.Body>\n            <Card.Title className=\"product-found\">Product Found</Card.Title>\n\n            {/* Counter===0 Question (Question 1) */}\n            {counter === 0 ? (\n              <Card.Subtitle className=\"mb-2 text-muted product-subtext\">\n                {/* Would you like to save this product to your \"Saved Products\"\n                page for notification capabilities? */}\n              </Card.Subtitle>\n            ) : // Ends counter===0 question (Question 1)\n\n            // Counter===1 statement (question 1 yes)\n            counter === 1 ? (\n              <Card.Subtitle className=\"mb-2 text-muted product-subtext\">\n                This item has been saved to your Saved Products! Check your\n                Saved Products page to confirm product notification preferences.\n              </Card.Subtitle>\n            ) : // Ends counter===1 statement (question 1 yes)\n\n            null}\n\n            <Container className=\"product-output\">\n              <Row>\n                <Col md>\n                  <img\n                    src={props.item.itemImage}\n                    alt=\"\"\n                    className=\"product-photo\"\n                  />\n                </Col>\n                <Col className=\"product-details md\">\n                  {/* this needs to be props and also have a limit on character length */}\n                  <Card.Title className=\"product-name\">\n                    {/* displays the title and allows user to click on a link to the url, opening in a new window*/}\n                    <a href={props.item.itemUrl} target=\"_blank\">\n                      {props.item.itemTitle}\n                    </a>\n                  </Card.Title>\n                  <Card.Subtitle className=\"mb-2 text-muted product-price\">\n                    Price: <strong>{props.item.itemPrice}</strong>\n                  </Card.Subtitle>\n                  <Card.Text className=\"product-status\">\n                    <strong style={{ color: 'red' }}>\n                      {props.item.itemStatus}\n                    </strong>\n                  </Card.Text>\n\n                  {/* Counter===0 button set (for Question 1)*/}\n                  {counter === 0 ? (\n                    <>\n                      <Card.Subtitle className=\"mb-2 text-muted product-subtext\">\n                        Would you like to save this product to your \"Saved\n                        Products\" page for notification capabilities?\n                      </Card.Subtitle>\n                      <Button\n                        onClick={question1Yes}\n                        variant=\"success\"\n                        className=\"product-btn\"\n                      >\n                        Yes\n                      </Button>\n                      <Button\n                        onClick={question1No}\n                        variant=\"outline-primary\"\n                        className=\"product-btn\"\n                      >\n                        No\n                      </Button>\n                    </>\n                  ) : // Ends counter===0 button set (for Question 1)\n\n                  null}\n                </Col>\n              </Row>\n            </Container>\n          </Card.Body>\n        </Card>\n      </Container>\n    </div>\n  );\n}\n\nexport default Product;\n","/Users/emilyaguirre/homework/22. project 3/Stockify/client/src/components/icons.js",["52"],"import React from 'react';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faCheckSquare, faCoffee } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faCheckSquare, faCoffee);\n",{"ruleId":"53","severity":1,"message":"54","line":5,"column":8,"nodeType":"55","messageId":"56","endLine":5,"endColumn":23},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"53","severity":1,"message":"61","line":12,"column":10,"nodeType":"55","messageId":"56","endLine":12,"endColumn":15},{"ruleId":"53","severity":1,"message":"62","line":12,"column":17,"nodeType":"55","messageId":"56","endLine":12,"endColumn":25},{"ruleId":"63","severity":1,"message":"64","line":42,"column":28,"nodeType":"65","messageId":"66","endLine":42,"endColumn":30},{"ruleId":"53","severity":1,"message":"67","line":6,"column":10,"nodeType":"55","messageId":"56","endLine":6,"endColumn":25},{"ruleId":"68","severity":1,"message":"69","line":85,"column":50,"nodeType":"70","endLine":85,"endColumn":65},{"ruleId":"53","severity":1,"message":"71","line":1,"column":8,"nodeType":"55","messageId":"56","endLine":1,"endColumn":13},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["72"],"no-negated-in-lhs",["73"],"'theme' is assigned a value but never used.","'setTheme' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'FontAwesomeIcon' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'React' is defined but never used.","no-global-assign","no-unsafe-negation"]